{"ast":null,"code":"var _jsxFileName = \"/Users/vijaychilaka/mankind-matrix/mankind-matrix/src/components/ProductGrid.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import ProductCard from './ProductCard';\n\n// const ProductGrid = ({ searchQuery, category }) => {\n//   const [products, setProducts] = useState([]);\n//   const [filtered, setFiltered] = useState([]);\n\n//   useEffect(() => {\n//     fetch('/products.json')\n//       .then(res => res.json())\n//       .then(data => {\n//         setProducts(data);\n//         setFiltered(data);\n//       });\n//   }, []);\n\n//   useEffect(() => {\n//     let result = products;\n\n//     if (category) {\n//       result = result.filter(p => p.category === category);\n//     }\n\n//     if (searchQuery) {\n//       result = result.filter(p =>\n//         p.name.toLowerCase().includes(searchQuery.toLowerCase())\n//       );\n//     }\n\n//     setFiltered(result);\n//   }, [searchQuery, category, products]);\n\n//   return (\n//     <div className=\"product-grid\">\n//       {filtered.map(product => (\n//         <ProductCard key={product.id} product={product} />\n//       ))}\n//     </div>\n//   );\n// };\n\n// export default ProductGrid;\n\n// using hard coded values for product card\n\n// src/components/ProductGrid.js\nimport React, { useState, useEffect } from 'react';\nimport ProductCard from './ProductCard';\nimport './ProductGrid.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dummyProducts = [{\n  id: 1,\n  name: 'NeuraX AI Processor',\n  shortDescription: 'High-performance AI processor for neural network acceleration.',\n  price: 'Call for Pricing',\n  category: 'AI Hardware',\n  imageUrl: 'https://via.placeholder.com/300x200.png?text=NeuraX+AI+Processor'\n}, {\n  id: 2,\n  name: 'SpectraForce X GPU',\n  shortDescription: '4K gaming and AI-ready graphics card.',\n  price: '$799',\n  category: 'GPUs',\n  imageUrl: 'https://via.placeholder.com/300x200.png?text=SpectraForce+X+GPU'\n}, {\n  id: 3,\n  name: 'QuantumEdge Semiconductor',\n  shortDescription: 'Energy-efficient chip for edge devices.',\n  price: '$349',\n  category: 'Semiconductors',\n  imageUrl: 'https://via.placeholder.com/300x200.png?text=QuantumEdge+Chip'\n}, {\n  id: 4,\n  name: 'VisionCore AI Module',\n  shortDescription: 'Plug-and-play AI module for real-time video processing.',\n  price: '$599',\n  category: 'AI Hardware',\n  imageUrl: 'https://via.placeholder.com/300x200.png?text=VisionCore+Module'\n}, {\n  id: 5,\n  name: 'Neuronet Accelerator',\n  shortDescription: 'Next-gen accelerator for deep learning workloads.',\n  price: 'Request a Quote',\n  category: 'AI Hardware',\n  imageUrl: 'https://via.placeholder.com/300x200.png?text=Neuronet+Accelerator'\n}, {\n  id: 6,\n  name: 'Photon AI Engine',\n  shortDescription: 'Low-latency engine for vision-based AI applications.',\n  price: '$999',\n  category: 'AI Hardware',\n  imageUrl: 'https://via.placeholder.com/300x200.png?text=Photon+AI+Engine'\n}];\nconst ProductGrid = () => {\n  _s();\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    // Simulate fetching data\n    setTimeout(() => {\n      setProducts(dummyProducts);\n    }, 500);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"product-grid\",\n    children: products.map(product => /*#__PURE__*/_jsxDEV(ProductCard, {\n      product: product\n    }, product.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductGrid, \"f86L6rLANGURv6GE6gupp7+oOp4=\");\n_c = ProductGrid;\nexport default ProductGrid;\nvar _c;\n$RefreshReg$(_c, \"ProductGrid\");","map":{"version":3,"names":["React","useState","useEffect","ProductCard","jsxDEV","_jsxDEV","dummyProducts","id","name","shortDescription","price","category","imageUrl","ProductGrid","_s","products","setProducts","setTimeout","className","children","map","product","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/vijaychilaka/mankind-matrix/mankind-matrix/src/components/ProductGrid.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import ProductCard from './ProductCard';\n\n// const ProductGrid = ({ searchQuery, category }) => {\n//   const [products, setProducts] = useState([]);\n//   const [filtered, setFiltered] = useState([]);\n\n//   useEffect(() => {\n//     fetch('/products.json')\n//       .then(res => res.json())\n//       .then(data => {\n//         setProducts(data);\n//         setFiltered(data);\n//       });\n//   }, []);\n\n//   useEffect(() => {\n//     let result = products;\n\n//     if (category) {\n//       result = result.filter(p => p.category === category);\n//     }\n\n//     if (searchQuery) {\n//       result = result.filter(p =>\n//         p.name.toLowerCase().includes(searchQuery.toLowerCase())\n//       );\n//     }\n\n//     setFiltered(result);\n//   }, [searchQuery, category, products]);\n\n//   return (\n//     <div className=\"product-grid\">\n//       {filtered.map(product => (\n//         <ProductCard key={product.id} product={product} />\n//       ))}\n//     </div>\n//   );\n// };\n\n// export default ProductGrid;\n\n\n\n// using hard coded values for product card\n\n// src/components/ProductGrid.js\nimport React, { useState, useEffect } from 'react';\nimport ProductCard from './ProductCard';\nimport './ProductGrid.css';\n\nconst dummyProducts = [\n  {\n    id: 1,\n    name: 'NeuraX AI Processor',\n    shortDescription: 'High-performance AI processor for neural network acceleration.',\n    price: 'Call for Pricing',\n    category: 'AI Hardware',\n    imageUrl: 'https://via.placeholder.com/300x200.png?text=NeuraX+AI+Processor'\n  },\n  {\n    id: 2,\n    name: 'SpectraForce X GPU',\n    shortDescription: '4K gaming and AI-ready graphics card.',\n    price: '$799',\n    category: 'GPUs',\n    imageUrl: 'https://via.placeholder.com/300x200.png?text=SpectraForce+X+GPU'\n  },\n  {\n    id: 3,\n    name: 'QuantumEdge Semiconductor',\n    shortDescription: 'Energy-efficient chip for edge devices.',\n    price: '$349',\n    category: 'Semiconductors',\n    imageUrl: 'https://via.placeholder.com/300x200.png?text=QuantumEdge+Chip'\n  },\n  {\n    id: 4,\n    name: 'VisionCore AI Module',\n    shortDescription: 'Plug-and-play AI module for real-time video processing.',\n    price: '$599',\n    category: 'AI Hardware',\n    imageUrl: 'https://via.placeholder.com/300x200.png?text=VisionCore+Module'\n  },\n  {\n    id: 5,\n    name: 'Neuronet Accelerator',\n    shortDescription: 'Next-gen accelerator for deep learning workloads.',\n    price: 'Request a Quote',\n    category: 'AI Hardware',\n    imageUrl: 'https://via.placeholder.com/300x200.png?text=Neuronet+Accelerator'\n  },\n  {\n    id: 6,\n    name: 'Photon AI Engine',\n    shortDescription: 'Low-latency engine for vision-based AI applications.',\n    price: '$999',\n    category: 'AI Hardware',\n    imageUrl: 'https://via.placeholder.com/300x200.png?text=Photon+AI+Engine'\n  }\n];\n\nconst ProductGrid = () => {\n  const [products, setProducts] = useState([]);\n\n  useEffect(() => {\n    // Simulate fetching data\n    setTimeout(() => {\n      setProducts(dummyProducts);\n    }, 500);\n  }, []);\n\n  return (\n    <div className=\"product-grid\">\n      {products.map(product => (\n        <ProductCard key={product.id} product={product} />\n      ))}\n    </div>\n  );\n};\n\nexport default ProductGrid;"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,aAAa,GAAG,CACpB;EACEC,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,qBAAqB;EAC3BC,gBAAgB,EAAE,gEAAgE;EAClFC,KAAK,EAAE,kBAAkB;EACzBC,QAAQ,EAAE,aAAa;EACvBC,QAAQ,EAAE;AACZ,CAAC,EACD;EACEL,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,oBAAoB;EAC1BC,gBAAgB,EAAE,uCAAuC;EACzDC,KAAK,EAAE,MAAM;EACbC,QAAQ,EAAE,MAAM;EAChBC,QAAQ,EAAE;AACZ,CAAC,EACD;EACEL,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,2BAA2B;EACjCC,gBAAgB,EAAE,yCAAyC;EAC3DC,KAAK,EAAE,MAAM;EACbC,QAAQ,EAAE,gBAAgB;EAC1BC,QAAQ,EAAE;AACZ,CAAC,EACD;EACEL,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,sBAAsB;EAC5BC,gBAAgB,EAAE,yDAAyD;EAC3EC,KAAK,EAAE,MAAM;EACbC,QAAQ,EAAE,aAAa;EACvBC,QAAQ,EAAE;AACZ,CAAC,EACD;EACEL,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,sBAAsB;EAC5BC,gBAAgB,EAAE,mDAAmD;EACrEC,KAAK,EAAE,iBAAiB;EACxBC,QAAQ,EAAE,aAAa;EACvBC,QAAQ,EAAE;AACZ,CAAC,EACD;EACEL,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,kBAAkB;EACxBC,gBAAgB,EAAE,sDAAsD;EACxEC,KAAK,EAAE,MAAM;EACbC,QAAQ,EAAE,aAAa;EACvBC,QAAQ,EAAE;AACZ,CAAC,CACF;AAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd;IACAe,UAAU,CAAC,MAAM;MACfD,WAAW,CAACV,aAAa,CAAC;IAC5B,CAAC,EAAE,GAAG,CAAC;EACT,CAAC,EAAE,EAAE,CAAC;EAEN,oBACED,OAAA;IAAKa,SAAS,EAAC,cAAc;IAAAC,QAAA,EAC1BJ,QAAQ,CAACK,GAAG,CAACC,OAAO,iBACnBhB,OAAA,CAACF,WAAW;MAAkBkB,OAAO,EAAEA;IAAQ,GAA7BA,OAAO,CAACd,EAAE;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAqB,CAClD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACX,EAAA,CAjBID,WAAW;AAAAa,EAAA,GAAXb,WAAW;AAmBjB,eAAeA,WAAW;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}