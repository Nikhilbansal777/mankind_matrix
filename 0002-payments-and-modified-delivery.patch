From b05c9f537e04878edc0e5c0ffdd0460cc2ba5a58 Mon Sep 17 00:00:00 2001
From: Shravani2015 <shravanijangam2015@gmail.com>
Date: Thu, 15 May 2025 18:11:53 +0000
Subject: [PATCH 2/3] payments and modified delivery

---
 src/features/cart/CartPage.jsx |   8 +-
 src/features/cart/Delivery.css |  28 +--
 src/features/cart/Delivery.jsx | 223 +++++++++++++--------
 src/features/cart/payments.jsx | 346 +++++++++++++++++++++++++++++++++
 4 files changed, 511 insertions(+), 94 deletions(-)
 create mode 100644 src/features/cart/payments.jsx

diff --git a/src/features/cart/CartPage.jsx b/src/features/cart/CartPage.jsx
index 8d2e1aad..5e525d5e 100644
--- a/src/features/cart/CartPage.jsx
+++ b/src/features/cart/CartPage.jsx
@@ -1,4 +1,5 @@
 import React from 'react';
+import { Link } from 'react-router-dom';
 import { useCart } from '../../context/CartContext';
 import { FaTrash, FaPlus, FaMinus } from 'react-icons/fa';
 import withLayout from '../../layouts/HOC/withLayout';
@@ -144,10 +145,9 @@ const CartPage = () => {
               <span>Total:</span>
               <span>${(cart.total + cart.total * 0.1).toFixed(2)}</span>
             </div>
-            
-            <button className="checkout-btn">
-              Proceed to Checkout
-            </button>
+            <Link to="/delivery" className="checkout-btn">
+            Proceed to Delivery
+            </Link>
           </div>
         </div>
       </div>
diff --git a/src/features/cart/Delivery.css b/src/features/cart/Delivery.css
index 1a322d66..4a8fa0c1 100644
--- a/src/features/cart/Delivery.css
+++ b/src/features/cart/Delivery.css
@@ -51,7 +51,7 @@
 }
 
 .step.active .step-number {
-  background-color: #3b82f6;
+  background-color: #000000;
   color: white;
 }
 
@@ -67,7 +67,7 @@
 }
 
 .step.active .step-label {
-  color: #3b82f6;
+  color: #000000;
   font-weight: 600;
 }
 
@@ -115,7 +115,7 @@
 }
 
 .change-link {
-  color: #3b82f6;
+  color: #000000;
   font-size: 14px;
   font-weight: 500;
   text-decoration: none;
@@ -173,7 +173,7 @@
 }
 
 .delivery-option.selected {
-  border-color: #3b82f6;
+  border-color: #000000;
   background-color: #eff6ff;
 }
 
@@ -211,7 +211,7 @@
   width: 18px;
   height: 18px;
   border-radius: 50%;
-  background-color: #3b82f6;
+  background-color: #000000;
   color: white;
   display: flex;
   align-items: center;
@@ -242,7 +242,7 @@
 }
 
 .date-option.selected {
-  border-color: #3b82f6;
+  border-color: #000000;
   background-color: #eff6ff;
 }
 
@@ -272,7 +272,7 @@
   width: 18px;
   height: 18px;
   border-radius: 50%;
-  background-color: #3b82f6;
+  background-color: #000000;
   color: white;
   display: flex;
   align-items: center;
@@ -304,7 +304,7 @@
 }
 
 .time-option.selected {
-  border-color: #3b82f6;
+  border-color: #000000;
   background-color: #eff6ff;
 }
 
@@ -319,7 +319,7 @@
   width: 16px;
   height: 16px;
   border-radius: 50%;
-  background-color: #3b82f6;
+  background-color: #000000;
   color: white;
   display: flex;
   align-items: center;
@@ -339,14 +339,14 @@
   top: 20px;
 }
 
-.cart-items {
+.cart-order {
   max-height: 300px;
   overflow-y: auto;
   margin-bottom: 16px;
   padding-right: 6px;
 }
 
-.cart-item {
+.cart-order .cart-item {
   display: flex;
   padding: 12px 0;
   border-bottom: 1px solid #e2e8f0;
@@ -444,7 +444,7 @@
   display: block;
   width: 100%;
   padding: 12px 16px;
-  background-color: #3b82f6;
+  background-color: #000000;
   color: white;
   border: none;
   border-radius: 6px;
@@ -456,7 +456,7 @@
 }
 
 .continue-button:hover {
-  background-color: #2563eb;
+  background-color: #000000;
 }
 
 .continue-button:disabled {
@@ -492,7 +492,7 @@
   width: 40px;
   height: 40px;
   border-radius: 50%;
-  border-left-color: #3b82f6;
+  border-left-color: #000000;
   animation: spin 1s linear infinite;
   margin-bottom: 16px;
 }
diff --git a/src/features/cart/Delivery.jsx b/src/features/cart/Delivery.jsx
index 5c9c7a2c..aa7b8804 100644
--- a/src/features/cart/Delivery.jsx
+++ b/src/features/cart/Delivery.jsx
@@ -1,56 +1,113 @@
 import React, { useState, useEffect } from 'react';
-import { Link } from 'react-router-dom';
+import { Link, useNavigate } from 'react-router-dom';
 import { Calendar, Clock, Truck, Check, User, MapPin, ShoppingBag } from 'lucide-react';
 import withLayout from '../../layouts/HOC/withLayout';
 import './Delivery.css';
-
-// Sample delivery options data - in a real app, this would come from your backend
-const deliveryOptions = {
-  standard: {
-    title: "Standard Delivery",
-    price: 0,
-    icon: <Truck className="text-gray-500" />,
-    deliveryDays: [
-      { date: "May 15, 2025", day: "Thursday", slots: ["Morning", "Afternoon"] },
-      { date: "May 16, 2025", day: "Friday", slots: ["Morning", "Afternoon", "Evening"] },
-      { date: "May 17, 2025", day: "Saturday", slots: ["Morning", "Afternoon"] },
-    ]
-  },
-  express: {
-    title: "Express Delivery",
-    price: 9.99,
-    icon: <Clock className="text-blue-500" />,
-    deliveryDays: [
-      { date: "May 13, 2025", day: "Tuesday", slots: ["Afternoon", "Evening"] },
-      { date: "May 14, 2025", day: "Wednesday", slots: ["Morning", "Afternoon", "Evening"] },
-    ]
-  }
-};
-
-// Sample cart items - in a real app, this would come from your cart state or API
-const cartItems = [
-  { id: 1, name: "Wireless Earbuds", price: 89.99, quantity: 1, image: "/api/placeholder/80/80" },
-  { id: 2, name: "Smart Watch", price: 199.99, quantity: 1, image: "/api/placeholder/80/80" },
-  { id: 3, name: "Portable Charger", price: 29.99, quantity: 2, image: "/api/placeholder/80/80" }
-];
+import { useCart } from '../../context/CartContext'; // Import the useCart hook
 
 const DeliveryPage = () => {
+  const { cart } = useCart(); // Use the useCart hook to access cart state
   const [deliveryType, setDeliveryType] = useState("standard");
   const [selectedDate, setSelectedDate] = useState(null);
   const [selectedTimeSlot, setSelectedTimeSlot] = useState(null);
   const [isLoading, setIsLoading] = useState(true);
-  
-  // Calculate cart totals
-  const subtotal = cartItems.reduce((sum, item) => sum + (item.price * item.quantity), 0);
-  const deliveryFee = deliveryOptions[deliveryType].price;
-  const total = subtotal + deliveryFee;
+  const [deliveryOptions, setDeliveryOptions] = useState({});
+  const navigate = useNavigate();
 
-  useEffect(() => {
-    // Simulate loading data
-    const timer = setTimeout(() => {
-      setIsLoading(false);
-    }, 800);
+  const taxRate = 0.10;
+  const taxAmount = cart.total * taxRate;
+  const deliveryFee = deliveryOptions[deliveryType]?.price || 0;
+  const total = cart.total + taxAmount + deliveryFee;
+
+  // Default delivery options if API fails
+  const getDefaultDeliveryOptions = () => {
+    const currentDate = new Date();
     
+    // Standard delivery dates (starting from current date + 5 days / 120 hours)
+    const standardDeliveryDays = [];
+    for (let i = 0; i < 3; i++) {
+      const deliveryDate = new Date(currentDate);
+      deliveryDate.setHours(currentDate.getHours() + 120 + (i * 24)); // 5 days + additional days
+      
+      const formattedDate = deliveryDate.toLocaleDateString('en-US', { 
+        month: 'short', 
+        day: 'numeric', 
+        year: 'numeric' 
+      });
+      
+      const dayName = deliveryDate.toLocaleDateString('en-US', { weekday: 'long' });
+      
+      standardDeliveryDays.push({
+        date: formattedDate,
+        day: dayName,
+        slots: ["8AM - 12PM", "12PM - 4PM", "4PM - 9PM"]
+      });
+    }
+    
+    // Express delivery dates (starting from current date + 3 days / 72 hours)
+    const expressDeliveryDays = [];
+    for (let i = 0; i < 3; i++) {
+      const deliveryDate = new Date(currentDate);
+      deliveryDate.setHours(currentDate.getHours() + 72 + (i * 24)); // 3 days + additional days
+      
+      const formattedDate = deliveryDate.toLocaleDateString('en-US', { 
+        month: 'short', 
+        day: 'numeric', 
+        year: 'numeric' 
+      });
+      
+      const dayName = deliveryDate.toLocaleDateString('en-US', { weekday: 'long' });
+      
+      expressDeliveryDays.push({
+        date: formattedDate,
+        day: dayName,
+        slots: ["10AM - 2PM", "2PM - 6PM", "6PM - 9PM"]
+      });
+    }
+    
+    return {
+      standard: {
+        title: "Standard Delivery",
+        price: 0,
+        icon: <Truck className="text-gray-500" />,
+        deliveryDays: standardDeliveryDays
+      },
+      express: {
+        title: "Express Delivery",
+        price: 9.99,
+        icon: <Clock className="text-blue-500" />,
+        deliveryDays: expressDeliveryDays
+      }
+    };
+  };
+
+  // Try to fetch delivery options from API, fallback to default options
+  const fetchDeliveryOptions = async () => {
+    try {
+      // Attempt to fetch from API
+      const response = await fetch('/api/delivery-options');
+      
+      // Check if the request was successful
+      if (!response.ok) {
+        throw new Error('API returned error status: ' + response.status);
+      }
+      
+      const data = await response.json();
+      setDeliveryOptions(data);
+    } catch (error) {
+      console.log('API fetch failed, using default delivery options:', error);
+      // If API call fails, use the default options
+      const defaultOptions = getDefaultDeliveryOptions();
+      setDeliveryOptions(defaultOptions);
+    } finally {
+      setIsLoading(false);
+    }
+  };
+
+  useEffect(() => {
+    // Fetch delivery options (from API or generate them)
+    fetchDeliveryOptions();
+
     // Initialize page functionality
     if (window.app && typeof window.app.initDeliveryPage === 'function') {
       window.app.initDeliveryPage();
@@ -60,11 +117,16 @@ const DeliveryPage = () => {
     }
 
     return () => {
-      clearTimeout(timer);
       // Cleanup if needed
     };
   }, []);
 
+  // Reset selected date and time slot when delivery type changes
+  useEffect(() => {
+    setSelectedDate(null);
+    setSelectedTimeSlot(null);
+  }, [deliveryType]);
+
   // Fallback function if vanilla JS isn't available
   const initBoxInteractions = () => {
     const boxes = document.querySelectorAll('.delivery-option');
@@ -79,18 +141,19 @@ const DeliveryPage = () => {
       alert("Please select both a delivery date and time slot");
       return;
     }
-    
-    // In a real app, you would save the selection to your state/context and navigate
+
+    // In a real app, you would likely save delivery options along with the cart data
     console.log({
       deliveryType,
       selectedDate,
       selectedTimeSlot,
-      cost: deliveryOptions[deliveryType].price
+      cost: deliveryOptions[deliveryType].price,
+      cartItems: cart.items
     });
-    
-    alert("Proceeding to checkout with your selected delivery options!");
-    // Navigate to checkout page
-    // history.push('/checkout');
+
+    navigate('/payments');
+    // Optionally, you could pass delivery details to the payments page via state
+    // navigate('/payments', { state: { deliveryDetails: { deliveryType, selectedDate, selectedTimeSlot, cost: deliveryOptions[deliveryType].price } } });
   };
 
   if (isLoading) {
@@ -127,9 +190,9 @@ const DeliveryPage = () => {
           <div className="step-label">Confirmation</div>
         </div>
       </div>
-      
+
       <h1>Select Delivery Options</h1>
-      
+
       <div className="delivery-content">
         <div className="delivery-main">
           {/* Delivery Address Summary */}
@@ -156,7 +219,7 @@ const DeliveryPage = () => {
           <div className="delivery-section delivery-options">
             <h2>Delivery Method</h2>
             <div className="delivery-types">
-              <div 
+              <div
                 className={`delivery-option ${deliveryType === "standard" ? "selected" : ""}`}
                 onClick={() => setDeliveryType("standard")}
               >
@@ -165,7 +228,7 @@ const DeliveryPage = () => {
                 </div>
                 <div className="option-details">
                   <h3>Standard Delivery</h3>
-                  <p>Delivery within 3-5 days</p>
+                  <p>Delivery within 5 days</p>
                 </div>
                 <div className="option-price">
                   <span>Free</span>
@@ -176,8 +239,8 @@ const DeliveryPage = () => {
                   </div>
                 )}
               </div>
-              
-              <div 
+
+              <div
                 className={`delivery-option ${deliveryType === "express" ? "selected" : ""}`}
                 onClick={() => setDeliveryType("express")}
               >
@@ -186,10 +249,10 @@ const DeliveryPage = () => {
                 </div>
                 <div className="option-details">
                   <h3>Express Delivery</h3>
-                  <p>Get it within 1-2 days</p>
+                  <p>Get it within 3 days</p>
                 </div>
                 <div className="option-price">
-                  <span>${deliveryOptions.express.price.toFixed(2)}</span>
+                  <span>${deliveryOptions.express?.price.toFixed(2)}</span>
                 </div>
                 {deliveryType === "express" && (
                   <div className="option-check">
@@ -199,13 +262,13 @@ const DeliveryPage = () => {
               </div>
             </div>
           </div>
-          
+
           {/* Date Selection */}
           <div className="delivery-section delivery-dates">
             <h2>Delivery Date</h2>
             <div className="date-options">
-              {deliveryOptions[deliveryType].deliveryDays.map((dayOption, index) => (
-                <div 
+              {deliveryOptions[deliveryType]?.deliveryDays.map((dayOption, index) => (
+                <div
                   key={index}
                   className={`date-option ${selectedDate === dayOption.date ? "selected" : ""}`}
                   onClick={() => {
@@ -229,16 +292,16 @@ const DeliveryPage = () => {
               ))}
             </div>
           </div>
-          
+
           {/* Time Slot Selection */}
           {selectedDate && (
             <div className="delivery-section delivery-slots">
               <h2>Time Slot</h2>
               <div className="time-options">
-                {deliveryOptions[deliveryType].deliveryDays
+                {deliveryOptions[deliveryType]?.deliveryDays
                   .find(day => day.date === selectedDate)
                   ?.slots.map((slot, index) => (
-                    <div 
+                    <div
                       key={index}
                       className={`time-option ${selectedTimeSlot === slot ? "selected" : ""}`}
                       onClick={() => setSelectedTimeSlot(slot)}
@@ -255,33 +318,41 @@ const DeliveryPage = () => {
             </div>
           )}
         </div>
-        
+
         <div className="delivery-sidebar">
           {/* Order Summary */}
           <div className="order-summary">
             <h2>Order Summary</h2>
-            
-            <div className="cart-items">
-              {cartItems.map(item => (
+
+            <div className="cart-order">
+              {cart.items.map(item => (
                 <div key={item.id} className="cart-item">
                   <div className="item-image">
-                    <img src={item.image} alt={item.name} />
+                    {item.imageUrl ? (
+                      <img src={item.imageUrl} alt={item.name} />
+                    ) : (
+                      <div className="placeholder-image">{item.name.charAt(0)}</div>
+                    )}
                   </div>
                   <div className="item-details">
                     <h3 className="item-name">{item.name}</h3>
                     <div className="item-meta">
                       <p className="item-quantity">Qty: {item.quantity}</p>
-                      <p className="item-price">${item.price.toFixed(2)}</p>
+                      <p className="item-price">{item.price}</p>
                     </div>
                   </div>
                 </div>
               ))}
             </div>
-            
+
             <div className="summary-details">
               <div className="summary-row">
                 <span>Subtotal</span>
-                <span>${subtotal.toFixed(2)}</span>
+                <span>${cart.total.toFixed(2)}</span>
+              </div>
+              <div className="summary-row">
+                <span>Tax (10%)</span>
+                <span>${taxAmount.toFixed(2)}</span>
               </div>
               <div className="summary-row">
                 <span>Shipping</span>
@@ -292,12 +363,12 @@ const DeliveryPage = () => {
                 <span>${total.toFixed(2)}</span>
               </div>
             </div>
-            
+
             <div className="delivery-info">
               {selectedDate && selectedTimeSlot ? (
                 <div className="selected-delivery">
                   <h3>Selected Delivery:</h3>
-                  <p>{deliveryOptions[deliveryType].title}</p>
+                  <p>{deliveryOptions[deliveryType]?.title}</p>
                   <p>{selectedDate} - {selectedTimeSlot}</p>
                 </div>
               ) : (
@@ -306,15 +377,15 @@ const DeliveryPage = () => {
                 </div>
               )}
             </div>
-            
-            <button 
+
+            <button
               className="continue-button"
               onClick={handleContinue}
               disabled={!selectedDate || !selectedTimeSlot}
             >
               Continue to Payment
             </button>
-            
+
             <Link to="/cart" className="back-link">
               Return to Cart
             </Link>
diff --git a/src/features/cart/payments.jsx b/src/features/cart/payments.jsx
new file mode 100644
index 00000000..14c84e86
--- /dev/null
+++ b/src/features/cart/payments.jsx
@@ -0,0 +1,346 @@
+
+import { useState } from 'react';
+import { CreditCard, Wallet, ChevronRight, CheckCircle, ArrowLeft, DollarSign, Building } from 'lucide-react';
+
+const PaymentPage = () => {
+  const [paymentMethod, setPaymentMethod] = useState('creditCard');
+  const [cardDetails, setCardDetails] = useState({
+    cardNumber: '',
+    cardName: '',
+    expiryDate: '',
+    cvv: ''
+  });
+  const [sameAsDelivery, setSameAsDelivery] = useState(true);
+  
+  // Mock data for demonstration purposes
+  const deliveryData = {
+    address: {
+      street: "123 Main St",
+      city: "San Francisco",
+      state: "CA",
+      zipCode: "94105",
+      country: "United States"
+    },
+    email: "user@example.com",
+    phone: "(555) 123-4567"
+  };
+
+  // Mock order summary
+  const orderSummary = {
+    subtotal: 129.99,
+    shipping: 5.99,
+    tax: 10.40,
+    total: 146.38
+  };
+
+  const handleInputChange = (e) => {
+    const { name, value } = e.target;
+    setCardDetails(prev => ({ ...prev, [name]: value }));
+  };
+  
+  const handleContinue = () => {
+    alert('Proceeding to confirmation page');
+  };
+  
+  const formatCardNumber = (value) => {
+    const digits = value.replace(/\D/g, '');
+    return digits.replace(/(\d{4})(?=\d)/g, '$1 ').trim();
+  };
+  
+  const handleCardNumberChange = (e) => {
+    const formattedValue = formatCardNumber(e.target.value);
+    setCardDetails(prev => ({ ...prev, cardNumber: formattedValue }));
+  };
+  
+  return (
+    <div className="bg-gray-50 p-4">
+      {/* Navigation */}
+      <div className="bg-white shadow p-4 mb-6 rounded-lg">
+        <div className="flex items-center mb-4">
+          <a href="#" className="text-gray-500 hover:text-gray-700 flex items-center">
+            <ArrowLeft size={20} />
+            <span className="ml-2">Back to Delivery</span>
+          </a>
+        </div>
+        
+        {/* Progress Indicator */}
+        <div className="flex items-center justify-between w-full max-w-3xl mx-auto">
+          <div className="flex flex-col items-center">
+            <div className="w-8 h-8 bg-green-500 rounded-full flex items-center justify-center text-white">
+              <CheckCircle size={16} />
+            </div>
+            <span className="text-sm mt-1">Cart</span>
+          </div>
+          <div className="h-1 bg-green-500 flex-1 mx-2"></div>
+          <div className="flex flex-col items-center">
+            <div className="w-8 h-8 bg-green-500 rounded-full flex items-center justify-center text-white">
+              <CheckCircle size={16} />
+            </div>
+            <span className="text-sm mt-1">Delivery</span>
+          </div>
+          <div className="h-1 bg-green-500 flex-1 mx-2"></div>
+          <div className="flex flex-col items-center">
+            <div className="w-8 h-8 bg-blue-500 rounded-full flex items-center justify-center text-white">
+              <span className="font-bold">3</span>
+            </div>
+            <span className="text-sm mt-1 font-medium">Payment</span>
+          </div>
+          <div className="h-1 bg-gray-300 flex-1 mx-2"></div>
+          <div className="flex flex-col items-center">
+            <div className="w-8 h-8 bg-gray-300 rounded-full flex items-center justify-center text-gray-500">
+              <span className="font-bold">4</span>
+            </div>
+            <span className="text-sm mt-1">Confirmation</span>
+          </div>
+        </div>
+      </div>
+      
+      {/* Main Content */}
+      <div className="flex flex-col md:flex-row gap-6">
+        {/* Payment Options */}
+        <div className="md:w-2/3">
+          <h1 className="text-2xl font-bold mb-4">Payment Method</h1>
+          
+          {/* Payment Method Selection */}
+          <div className="bg-white p-4 rounded-lg shadow mb-6">
+            <h2 className="text-lg font-medium mb-4">Select Payment Method</h2>
+            
+            <div className="grid grid-cols-2 gap-4 mb-4">
+              <div 
+                className={`border rounded-lg p-4 flex items-center cursor-pointer ${paymentMethod === 'creditCard' ? 'border-blue-500 bg-blue-50' : 'border-gray-200'}`}
+                onClick={() => setPaymentMethod('creditCard')}
+              >
+                <CreditCard className={paymentMethod === 'creditCard' ? 'text-blue-500' : 'text-gray-400'} />
+                <span className="ml-2 font-medium">Credit / Debit Card</span>
+              </div>
+              
+              <div 
+                className={`border rounded-lg p-4 flex items-center cursor-pointer ${paymentMethod === 'bank' ? 'border-blue-500 bg-blue-50' : 'border-gray-200'}`}
+                onClick={() => setPaymentMethod('bank')}
+              >
+                <Building className={paymentMethod === 'bank' ? 'text-blue-500' : 'text-gray-400'} />
+                <span className="ml-2 font-medium">Online Banking</span>
+              </div>
+              
+              <div 
+                className={`border rounded-lg p-4 flex items-center cursor-pointer ${paymentMethod === 'appleWallet' ? 'border-blue-500 bg-blue-50' : 'border-gray-200'}`}
+                onClick={() => setPaymentMethod('appleWallet')}
+              >
+                <Wallet className={paymentMethod === 'appleWallet' ? 'text-blue-500' : 'text-gray-400'} />
+                <span className="ml-2 font-medium">Apple Wallet</span>
+              </div>
+              
+              <div 
+                className={`border rounded-lg p-4 flex items-center cursor-pointer ${paymentMethod === 'paypal' ? 'border-blue-500 bg-blue-50' : 'border-gray-200'}`}
+                onClick={() => setPaymentMethod('paypal')}
+              >
+                <DollarSign className={paymentMethod === 'paypal' ? 'text-blue-500' : 'text-gray-400'} />
+                <span className="ml-2 font-medium">PayPal</span>
+              </div>
+            </div>
+          </div>
+          
+          {/* Credit Card Details */}
+          {paymentMethod === 'creditCard' && (
+            <div className="bg-white p-4 rounded-lg shadow mb-6">
+              <h2 className="text-lg font-medium mb-4">Card Details</h2>
+              
+              <div className="space-y-4">
+                <div>
+                  <label className="block text-sm font-medium text-gray-700 mb-1">Card Number</label>
+                  <input
+                    type="text"
+                    name="cardNumber"
+                    value={cardDetails.cardNumber}
+                    onChange={handleCardNumberChange}
+                    placeholder="1234 5678 9012 3456"
+                    maxLength="19"
+                    className="w-full p-2 border border-gray-300 rounded-md"
+                  />
+                </div>
+                
+                <div>
+                  <label className="block text-sm font-medium text-gray-700 mb-1">Name on Card</label>
+                  <input
+                    type="text"
+                    name="cardName"
+                    value={cardDetails.cardName}
+                    onChange={handleInputChange}
+                    placeholder="John Doe"
+                    className="w-full p-2 border border-gray-300 rounded-md"
+                  />
+                </div>
+                
+                <div className="grid grid-cols-2 gap-4">
+                  <div>
+                    <label className="block text-sm font-medium text-gray-700 mb-1">Expiry Date</label>
+                    <input
+                      type="text"
+                      name="expiryDate"
+                      value={cardDetails.expiryDate}
+                      onChange={handleInputChange}
+                      placeholder="MM/YY"
+                      maxLength="5"
+                      className="w-full p-2 border border-gray-300 rounded-md"
+                    />
+                  </div>
+                  
+                  <div>
+                    <label className="block text-sm font-medium text-gray-700 mb-1">CVV</label>
+                    <input
+                      type="password"
+                      name="cvv"
+                      value={cardDetails.cvv}
+                      onChange={handleInputChange}
+                      placeholder="123"
+                      maxLength="4"
+                      className="w-full p-2 border border-gray-300 rounded-md"
+                    />
+                  </div>
+                </div>
+              </div>
+            </div>
+          )}
+          
+          {/* Bank Selection */}
+          {paymentMethod === 'bank' && (
+            <div className="bg-white p-4 rounded-lg shadow mb-6">
+              <h2 className="text-lg font-medium mb-4">Select Your Bank</h2>
+              <div className="grid grid-cols-2 gap-4">
+                {['Bank of America', 'Chase', 'Wells Fargo', 'Citibank'].map((bank) => (
+                  <div key={bank} className="border rounded-lg p-4 flex items-center justify-center cursor-pointer hover:border-blue-500">
+                    <span className="font-medium">{bank}</span>
+                  </div>
+                ))}
+              </div>
+            </div>
+          )}
+          
+          {/* Apple Wallet */}
+          {paymentMethod === 'appleWallet' && (
+            <div className="bg-white p-4 rounded-lg shadow mb-6">
+              <h2 className="text-lg font-medium mb-4">Apple Wallet</h2>
+              <div className="flex justify-center p-4">
+                <button className="bg-black text-white px-4 py-2 rounded-lg">
+                  Pay with Apple Pay
+                </button>
+              </div>
+            </div>
+          )}
+          
+          {/* PayPal */}
+          {paymentMethod === 'paypal' && (
+            <div className="bg-white p-4 rounded-lg shadow mb-6">
+              <h2 className="text-lg font-medium mb-4">PayPal</h2>
+              <div className="flex justify-center p-4">
+                <button className="bg-blue-500 text-white px-4 py-2 rounded-lg">
+                  Continue with PayPal
+                </button>
+              </div>
+            </div>
+          )}
+          
+          {/* Billing Address */}
+          <div className="bg-white p-4 rounded-lg shadow mb-6">
+            <h2 className="text-lg font-medium mb-4">Billing Address</h2>
+            
+            <div className="mb-4">
+              <label className="flex items-center">
+                <input
+                  type="checkbox"
+                  checked={sameAsDelivery}
+                  onChange={() => setSameAsDelivery(!sameAsDelivery)}
+                  className="h-4 w-4 text-blue-500 border-gray-300 rounded"
+                />
+                <span className="ml-2 text-gray-700">Same as delivery address</span>
+              </label>
+            </div>
+            
+            {sameAsDelivery ? (
+              <div className="bg-gray-50 p-4 rounded-md">
+                <p className="font-medium">{deliveryData.address.street}</p>
+                <p>{deliveryData.address.city}, {deliveryData.address.state} {deliveryData.address.zipCode}</p>
+                <p>{deliveryData.address.country}</p>
+              </div>
+            ) : (
+              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
+                <div>
+                  <label className="block text-sm font-medium text-gray-700 mb-1">Street Address</label>
+                  <input type="text" className="w-full p-2 border border-gray-300 rounded-md" />
+                </div>
+                <div>
+                  <label className="block text-sm font-medium text-gray-700 mb-1">City</label>
+                  <input type="text" className="w-full p-2 border border-gray-300 rounded-md" />
+                </div>
+                <div>
+                  <label className="block text-sm font-medium text-gray-700 mb-1">State/Province</label>
+                  <input type="text" className="w-full p-2 border border-gray-300 rounded-md" />
+                </div>
+                <div>
+                  <label className="block text-sm font-medium text-gray-700 mb-1">ZIP/Postal Code</label>
+                  <input type="text" className="w-full p-2 border border-gray-300 rounded-md" />
+                </div>
+              </div>
+            )}
+          </div>
+        </div>
+        
+        {/* Order Summary */}
+        <div className="md:w-1/3">
+          <div className="bg-white p-4 rounded-lg shadow">
+            <h2 className="text-lg font-bold mb-4">Order Summary</h2>
+            
+            <div className="border-b pb-4 mb-4">
+              <div className="flex justify-between mb-2">
+                <span className="text-gray-600">Subtotal</span>
+                <span>${orderSummary.subtotal.toFixed(2)}</span>
+              </div>
+              <div className="flex justify-between mb-2">
+                <span className="text-gray-600">Shipping</span>
+                <span>${orderSummary.shipping.toFixed(2)}</span>
+              </div>
+              <div className="flex justify-between">
+                <span className="text-gray-600">Tax</span>
+                <span>${orderSummary.tax.toFixed(2)}</span>
+              </div>
+            </div>
+            
+            <div className="flex justify-between mb-6">
+              <span className="font-bold">Total</span>
+              <span className="font-bold text-xl">${orderSummary.total.toFixed(2)}</span>
+            </div>
+            
+            <button 
+              onClick={handleContinue}
+              className="w-full bg-blue-500 hover:bg-blue-600 text-white py-2 px-4 rounded-md flex items-center justify-center font-medium"
+            >
+              Continue to Confirmation
+              <ChevronRight size={16} className="ml-1" />
+            </button>
+            
+            <div className="mt-4 text-center">
+              <p className="text-gray-500 text-sm">
+                By completing this order, you agree to our 
+                <a href="#" className="text-blue-500 hover:underline ml-1">Terms and Conditions</a>.
+              </p>
+            </div>
+            
+            {/* Delivery Information */}
+            <div className="mt-6 pt-6 border-t">
+              <h3 className="font-medium mb-2">Delivery Information</h3>
+              <div className="text-sm text-gray-600">
+                <p className="mb-1">{deliveryData.address.street}</p>
+                <p className="mb-1">{deliveryData.address.city}, {deliveryData.address.state} {deliveryData.address.zipCode}</p>
+                <p className="mb-1">{deliveryData.address.country}</p>
+                <p className="mb-1">{deliveryData.email}</p>
+                <p>{deliveryData.phone}</p>
+              </div>
+            </div>
+          </div>
+        </div>
+      </div>
+    </div>
+  );
+};
+
+export default PaymentPage;
-- 
2.49.0.windows.1

